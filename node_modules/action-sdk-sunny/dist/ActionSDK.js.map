{"version":3,"sources":["webpack://actionSDK/webpack/universalModuleDefinition","webpack://actionSDK/webpack/bootstrap","webpack://actionSDK/./src/apis/BaseApi.ts","webpack://actionSDK/./src/apis/ApiType.ts","webpack://actionSDK/./src/apis/ApiError.ts","webpack://actionSDK/./src/Utils.ts","webpack://actionSDK/./src/index.ts","webpack://actionSDK/./src/dataModels/ActionStatus.ts","webpack://actionSDK/./src/dataModels/Visibility.ts","webpack://actionSDK/./src/dataModels/ActionPropertyValueType.ts","webpack://actionSDK/./src/dataModels/ActionPropertyUpdateType.ts","webpack://actionSDK/./src/dataModels/ActionDataColumnValueType.ts","webpack://actionSDK/./src/dataModels/SubscriptionType.ts","webpack://actionSDK/./src/apis/action/CreateAction.ts","webpack://actionSDK/./src/apis/action/UpdateAction.ts","webpack://actionSDK/./src/apis/action/DeleteAction.ts","webpack://actionSDK/./src/apis/action/GetAction.ts","webpack://actionSDK/./src/apis/dataRow/AddActionDataRow.ts","webpack://actionSDK/./src/apis/dataRow/UpdateActionDataRow.ts","webpack://actionSDK/./src/apis/dataRow/AddOrUpdateActionDataRows.ts","webpack://actionSDK/./src/apis/dataRow/DeleteActionDataRow.ts","webpack://actionSDK/./src/apis/dataRow/GetActionDataRow.ts","webpack://actionSDK/./src/apis/dataRow/GetActionDataRows.ts","webpack://actionSDK/./src/apis/dataRow/GetActionDataRowsSummary.ts","webpack://actionSDK/./src/apis/dataRow/DownloadActionDataRowsResult.ts","webpack://actionSDK/./src/apis/actionPackage/GetLocalizedStrings.ts","webpack://actionSDK/./src/apis/subscription/GetSubscriptionMembers.ts","webpack://actionSDK/./src/apis/subscription/GetSubscriptionMemberCount.ts","webpack://actionSDK/./src/apis/subscription/GetActionSubscriptionNonParticipants.ts","webpack://actionSDK/./src/apis/misc/GetContext.ts","webpack://actionSDK/./src/apis/misc/HideLoadingIndicator.ts","webpack://actionSDK/./src/apis/misc/CloseView.ts","webpack://actionSDK/./src/ExecuteApi.ts","webpack://actionSDK/./src/host/ActionSdkHostBridge.ts","webpack://actionSDK/./node_modules/uuid/dist/esm-browser/rng.js","webpack://actionSDK/./node_modules/uuid/dist/esm-browser/bytesToUuid.js","webpack://actionSDK/./node_modules/uuid/dist/esm-browser/v1.js","webpack://actionSDK/./node_modules/uuid/dist/esm-browser/v35.js","webpack://actionSDK/./node_modules/uuid/dist/esm-browser/md5.js","webpack://actionSDK/./node_modules/uuid/dist/esm-browser/v3.js","webpack://actionSDK/./node_modules/uuid/dist/esm-browser/v4.js","webpack://actionSDK/./node_modules/uuid/dist/esm-browser/sha1.js","webpack://actionSDK/./node_modules/uuid/dist/esm-browser/v5.js","webpack://actionSDK/./node_modules/uuid/dist/esm-browser/index.js"],"names":[],"mappings":"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;;AC9F0B;;AAE3C;AACA;AACA;AACA,4BAA4B,EAAE;AAC9B;AACA,GAAG;AACH;AACA;;AAEA;AACA,0CAA0C;;AAE1C;;AAEA,iBAAiB,gBAAgB;AACjC;AACA;;AAEA;AACA;;AAEO;AACA;AACQ;AACf;AACA;AACA;AACA;AACA;AACA,6IAA6I;;AAE7I;AACA;AACA;;AAEA;AACA,uBAAuB,UAAU;AACjC;AACA;AACA;;AAEA,kBAAkB,uBAAW;AAC7B,IAAI;;;AAGJ;AACA;AACA,GAAG,eAAe;;;AAGlB;AACA;AACA;AACA,C;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;;AAElD;;AAEA,mBAAmB,gBAAgB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,aAAa,mBAAmB;AAChC;AACA;;AAEA;;AAEA,aAAa,aAAa;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEe,uDAAG,E;;ACzNS;AACA;AAC3B,SAAS,GAAG,aAAa,eAAG;AACb,qDAAE,E;;ACHU;AACgB;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,+CAA+C,GAAG,IAAI;;AAEtD;AACA,kCAAkC;;AAElC;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;;AAEA,gBAAgB,uBAAW;AAC3B;;AAEe,qDAAE,E;;AC1BjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kDAAkD;;AAElD;;AAEA,mBAAmB,gBAAgB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,OAAO;AACxB;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,OAAO;AACxB;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;;AAEA,oBAAoB,QAAQ;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEe,yDAAI,E;;AC1FQ;AACE;AAC7B,SAAS,GAAG,aAAa,gBAAI;AACd,qDAAE,E;;ACHjB;AAAA;AAAA;AAAA;AAAwC;AACA;AACA","file":"ActionSDK.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"actionSDK\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"actionSDK\"] = factory();\n\telse\n\t\troot[\"actionSDK\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import { ApiType } from \"./ApiType\";\r\nimport { ApiError, ApiErrorCategory, getApiError } from \"./ApiError\";\r\nimport { Utils } from \"../Utils\";\r\n\r\n/**\r\n * Base API namespace.\r\n * @internal\r\n */\r\nexport namespace BaseApi {\r\n    /**\r\n     * Base class for all kinds of API request body.\r\n     */\r\n    export class Request {\r\n        /**\r\n         * Unique identifier for the request.\r\n         * This is useful for setting dependencies among requests in a batch.\r\n         * @internal\r\n         */\r\n        public id: string = Utils.generateGUID();\r\n\r\n        /**\r\n         * IDs of the requests on which the current request depends on.\r\n         * @internal\r\n         */\r\n        public dependsOn: string[];\r\n\r\n        /**\r\n         * API type.\r\n         * @internal\r\n         */\r\n        public apiType: ApiType;\r\n\r\n        /**\r\n         * Constructor to create a request object.\r\n         * @internal\r\n         */\r\n        constructor(apiType: ApiType) {\r\n            this.apiType = apiType;\r\n        }\r\n\r\n        /**\r\n         * Validation.\r\n         * @internal\r\n         */\r\n        public validate() {\r\n            if (!this.apiType || !Object.values(ApiType).includes(this.apiType)) {\r\n                throw getApiError(ApiErrorCategory.InvalidRequest, null, \"Request - Invalid apiType!\");\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Utility to make current request dependent on other requests.\r\n         * This is useful to set an order for execution of requests in a batch.\r\n         * @param requests The request objects on which the current one depends\r\n         */\r\n        public setDependentOn(requests: Request[]) {\r\n            this.dependsOn = this.dependsOn || [];\r\n            requests.forEach(request => this.dependsOn.push(request.id));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Base class for all kinds of API response body.\r\n     */\r\n    export class Response {\r\n        /**\r\n         * The ID of the corresponding request.\r\n         * @internal\r\n         */\r\n        public id: string\r\n\r\n        /**\r\n         * API error, if any.\r\n         */\r\n        public error: ApiError;\r\n\r\n        /**\r\n         * Flag denoting if API was successful or not.\r\n         */\r\n        public get success(): boolean {\r\n            return !this.error;\r\n        }\r\n\r\n        /**\r\n         * Constructor to create a response object.\r\n         * @internal\r\n         */\r\n        constructor(id: string, error?: ApiError) {\r\n            this.id = id;\r\n            this.error = error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Container for multiple API requests.\r\n     */\r\n    export class BatchRequest {\r\n        /**\r\n         * Batch API request ID.\r\n         * @internal\r\n         */\r\n        public id: string = Utils.generateGUID();\r\n\r\n        /**\r\n         * List of API requests in the batch.\r\n         */\r\n        public requests: Request[];\r\n\r\n        /**\r\n         * Constructor to create a batch request object.\r\n         */\r\n        constructor(requests: Request[]) {\r\n            this.requests = requests || [];\r\n        }\r\n\r\n        /**\r\n         * Validation.\r\n         * @internal\r\n         */\r\n        public validate() {\r\n            if (!this.requests || this.requests.length == 0) {\r\n                throw getApiError(ApiErrorCategory.InvalidRequest, null, \"BatchRequest - There are no request!\");\r\n            }\r\n            this.requests.forEach(request => request.validate());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Container for multiple API responses.\r\n     */\r\n    export class BatchResponse {\r\n        /**\r\n         * Batch API request ID.\r\n         * @internal\r\n         */\r\n        public id: string;\r\n\r\n        /**\r\n         * List of API responses for the batch.\r\n         */\r\n        public responses: Response[];\r\n\r\n        /**\r\n         * Constructor to create a batch response object.\r\n         * @internal\r\n         */\r\n        constructor(requestId: string, responses: Response[]) {\r\n            this.id = requestId;\r\n            this.responses = responses;\r\n        }\r\n    }\r\n}","/**\r\n * This enum represents the diffetent types of APIs.\r\n * @ignore\r\n */\r\nexport enum ApiType {\r\n    // Action CRUD APIs\r\n    CreateAction = \"CreateAction\",\r\n    UpdateAction = \"UpdateAction\",\r\n    DeleteAction = \"DeleteAction\",\r\n    GetAction = \"GetAction\",\r\n\r\n    // Data Row CRUD APIs\r\n    AddActionDataRow = \"AddActionDataRow\",\r\n    UpdateActionDataRow = \"UpdateActionDataRow\",\r\n    AddOrUpdateActionDataRows = \"AddOrUpdateActionDataRows\",\r\n    DeleteActionDataRow = \"DeleteActionDataRow\",\r\n    GetActionDataRow = \"GetActionDataRow\",\r\n    GetActionDataRows = \"GetActionDataRows\",\r\n    GetActionDataRowsSummary = \"GetActionDataRowsSummary\",\r\n    DownloadActionDataRowsResult = \"DownloadActionDataRowsResult\",\r\n\r\n    // Action Package APIs\r\n    GetLocalizedStrings = \"GetLocalizedStrings\",\r\n\r\n    // Subscription APIs\r\n    GetSubscriptionMembers = \"GetSubscriptionMembers\",\r\n    GetSubscriptionMemberCount = \"GetSubscriptionMemberCount\",\r\n    GetActionSubscriptionNonParticipants = \"GetActionSubscriptionNonParticipants\",\r\n\r\n    // Misc APIs\r\n    GetContext = \"GetContext\",\r\n    HideLoadingIndicator = \"HideLoadingIndicator\",\r\n    CloseView = \"CloseView\",\r\n}","/**\r\n * This interface represents the error object returned when any API fails.\r\n */\r\nexport interface ApiError {\r\n    /**\r\n     * Error category.\r\n     */\r\n    category: ApiErrorCategory;\r\n\r\n    /**\r\n     * Error code.\r\n     */\r\n    code: string;\r\n\r\n    /**\r\n     * Error message.\r\n     */\r\n    message: string;\r\n}\r\n\r\n/**\r\n * This enum represents the different categories of API errors.\r\n */\r\nexport enum ApiErrorCategory {\r\n    /**\r\n     * Any unknown error.\r\n     */\r\n    Unknown = \"Unknown\",\r\n\r\n    /**\r\n     * Error when more than allowed APIs are executed in batch.\r\n     */\r\n    BatchApiCountLimitExceeded = \"BatchApiCountLimitExceeded\",\r\n\r\n    /**\r\n     * Error when API type is not supported.\r\n     */\r\n    UnsupportedApi = \"UnsupportedApi\",\r\n\r\n    /**\r\n     * Error when API request contains invalid data.\r\n     */\r\n    InvalidRequest = \"InvalidRequest\",\r\n\r\n    /**\r\n     * Error when API execution fails due to a server error.\r\n     * ErrorCode is useful for finer error types.\r\n     */\r\n    ServerError = \"ServerError\",\r\n}\r\n\r\n/**\r\n * Function to generate ApiError object.\r\n * \r\n * @param category Error category\r\n * @param code Error code\r\n * @param message Error message\r\n * @internal\r\n */\r\nexport function getApiError(category: ApiErrorCategory, code: string, message: string): ApiError {\r\n    return {\r\n        category: category || ApiErrorCategory.Unknown,\r\n        code: code,\r\n        message: message\r\n    } as ApiError;\r\n}","import * as uuid from \"uuid\";\r\n\r\n/**\r\n * This class contains the utility APIs.\r\n * @internal\r\n */\r\nexport class Utils {\r\n    public static generateGUID(): string {\r\n        return uuid.v4();\r\n    }\r\n\r\n    public static isEmptyString(str: string): boolean {\r\n        return this.isEmptyObject(str);\r\n    }\r\n\r\n    public static isEmptyObject(obj: any): boolean {\r\n        if (obj == undefined || obj == null) {\r\n            return true;\r\n        }\r\n\r\n        var isEmpty = false;\r\n\r\n        if (typeof obj === \"number\" || typeof obj === \"boolean\") {\r\n            isEmpty = false;\r\n        } else if (typeof obj === \"string\") {\r\n            isEmpty = obj.trim().length == 0;\r\n        } else if (Array.isArray(obj)) {\r\n            isEmpty = obj.length == 0;\r\n        } else if (typeof obj === \"object\") {\r\n            if (this.isValidJson(obj)) {\r\n                isEmpty = JSON.stringify(obj) == \"{}\";\r\n            }\r\n        }\r\n        return isEmpty;\r\n    }\r\n\r\n    public static isValidJson(json: any): boolean {\r\n        try {\r\n            JSON.parse(JSON.stringify(json));\r\n            return true;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","// DataModels\r\nexport { Action } from \"./dataModels/Action\";\r\nexport { ActionUpdateInfo } from \"./dataModels/ActionUpdateInfo\";\r\nexport { ActionDataTable } from \"./dataModels/ActionDataTable\";\r\nexport { ActionDataTableUpdateInfo } from \"./dataModels/ActionDataTableUpdateInfo\";\r\nexport { ActionProperty } from \"./dataModels/ActionProperty\";\r\nexport { ActionPropertyUpdateInfo } from \"./dataModels/ActionPropertyUpdateInfo\";\r\nexport { ActionDataColumn } from \"./dataModels/ActionDataColumn\";\r\nexport { ActionDataColumnOption } from \"./dataModels/ActionDataColumnOption\";\r\nexport { ActionDataRow } from \"./dataModels/ActionDataRow\";\r\nexport { ActionDataRowsSummary } from \"./dataModels/ActionDataRowsSummary\";\r\nexport { ActionSdkContext } from \"./dataModels/ActionSdkContext\";\r\nexport { Subscription } from \"./dataModels/Subscription\";\r\nexport { SubscriptionMember } from \"./dataModels/SubscriptionMember\";\r\n\r\n// DataModel Enums\r\nexport { ActionStatus } from \"./dataModels/ActionStatus\";\r\nexport { Visibility } from \"./dataModels/Visibility\";\r\nexport { ActionPropertyValueType } from \"./dataModels/ActionPropertyValueType\";\r\nexport { ActionPropertyUpdateType } from \"./dataModels/ActionPropertyUpdateType\";\r\nexport { ActionDataColumnValueType } from \"./dataModels/ActionDataColumnValueType\";\r\nexport { SubscriptionType } from \"./dataModels/SubscriptionType\";\r\n\r\n// Base API\r\nexport { BaseApi } from \"./apis/BaseApi\";\r\n\r\n// Action CRUD APIs\r\nexport { CreateAction } from \"./apis/action/CreateAction\";\r\nexport { UpdateAction } from \"./apis/action/UpdateAction\";\r\nexport { DeleteAction } from \"./apis/action/DeleteAction\";\r\nexport { GetAction } from \"./apis/action/GetAction\";\r\n\r\n// Data Row CRUD APIs\r\nexport { AddActionDataRow } from \"./apis/dataRow/AddActionDataRow\";\r\nexport { UpdateActionDataRow } from \"./apis/dataRow/UpdateActionDataRow\";\r\nexport { AddOrUpdateActionDataRows } from \"./apis/dataRow/AddOrUpdateActionDataRows\";\r\nexport { DeleteActionDataRow } from \"./apis/dataRow/DeleteActionDataRow\";\r\nexport { GetActionDataRow } from \"./apis/dataRow/GetActionDataRow\";\r\nexport { GetActionDataRows } from \"./apis/dataRow/GetActionDataRows\";\r\nexport { GetActionDataRowsSummary } from \"./apis/dataRow/GetActionDataRowsSummary\";\r\nexport { DownloadActionDataRowsResult } from \"./apis/dataRow/DownloadActionDataRowsResult\";\r\n\r\n// Action Package APIs\r\nexport { GetLocalizedStrings } from \"./apis/actionPackage/GetLocalizedStrings\";\r\n\r\n// Subscription APIs\r\nexport { GetSubscriptionMembers } from \"./apis/subscription/GetSubscriptionMembers\";\r\nexport { GetSubscriptionMemberCount } from \"./apis/subscription/GetSubscriptionMemberCount\";\r\nexport { GetActionSubscriptionNonParticipants } from \"./apis/subscription/GetActionSubscriptionNonParticipants\";\r\n\r\n// Misc APIs\r\nexport { GetContext } from \"./apis/misc/GetContext\";\r\nexport { HideLoadingIndicator } from \"./apis/misc/HideLoadingIndicator\";\r\nexport { CloseView } from \"./apis/misc/CloseView\";\r\n\r\n// ApiError\r\nexport * from \"./apis/ApiError\";\r\n\r\n// ExecuteApi\r\nexport * from \"./ExecuteApi\";\r\n\r\n// Host related stuffs\r\nexport { IActionSdkHost } from \"./host/IActionSdkHost\";\r\nexport { ApiType } from \"./apis/ApiType\";","/**\r\n * This enum represents different types of action statuses.\r\n * @category Data Model\r\n */\r\nexport enum ActionStatus {\r\n    /**\r\n     * Default action status.\r\n     */\r\n    Active = \"Active\",\r\n\r\n    /**\r\n     * Beyond expiry time an action will automatically be expired. \r\n     * No further data-rows will be allowed after this.\r\n     */\r\n    Expired = \"Expired\",\r\n\r\n    /**\r\n     * An action can be closed manually.\r\n     * No further data-rows will be allowed after this.\r\n     */\r\n    Closed = \"Closed\"\r\n}","/**\r\n * This enum represents the different types of visibility setting.\r\n * @category Data Model\r\n */\r\nexport enum Visibility {\r\n    /**\r\n     * Only visible to sender/creator of the action.\r\n     */\r\n    Sender = \"Sender\",\r\n\r\n    /**\r\n     * Visible to every member in every action subscriptions.\r\n     */\r\n    All = \"All\"\r\n}","/**\r\n * This enum represents the different types of values contained by an action property.\r\n * @category Data Model\r\n */\r\nexport enum ActionPropertyValueType {\r\n    /**\r\n     * Text type.\r\n     */\r\n    Text = \"Text\",\r\n\r\n    /**\r\n     * Number type.\r\n     */\r\n    Numeric = \"Numeric\",\r\n\r\n    /**\r\n     * Location type, with latitude (lt), longitude (lg), name (n).\r\n     */\r\n    Location = \"Location\",\r\n\r\n    /**\r\n     * Epoch timestamp type.\r\n     */\r\n    DateTime = \"DateTime\",\r\n\r\n    /**\r\n     * Unique list of texts type.\r\n     */\r\n    StringSet = \"StringSet\"\r\n}","/**\r\n * This enum represents the different update types of action properties.\r\n * @category Data Model\r\n */\r\nexport enum ActionPropertyUpdateType {\r\n    /**\r\n     * Replace the old property value with a new one.\r\n     */\r\n    Update = \"Update\",\r\n\r\n    /**\r\n     * Add a new property.\r\n     */\r\n    Add = \"Add\",\r\n\r\n    /**\r\n     * Delete a property.\r\n     */\r\n    Delete = \"Delete\",\r\n\r\n    /**\r\n     * Replace an entry in the property value (Array type) with a new one.\r\n     */\r\n    Replace = \"Replace\",\r\n\r\n    /**\r\n     * Add entries in the property value (Array type).\r\n     */\r\n    Append = \"Append\",\r\n\r\n    /**\r\n     * Remove entries from the property value (Array type).\r\n     */\r\n    Remove = \"Remove\"\r\n}","/**\r\n * This enum represents the different types of data contained by an action data-column.\r\n * @category Data Model\r\n */\r\nexport enum ActionDataColumnValueType {\r\n    /**\r\n     * Multi-choice type, only one option can be selected.\r\n     */\r\n    SingleOption = \"SingleOption\",\r\n\r\n    /**\r\n     * Multi-choice type, any number of options can be selected.\r\n     */\r\n    MultiOption = \"MultiOption\",\r\n\r\n    /**\r\n     * Text type, upto 4000 characters.\r\n     */\r\n    Text = \"Text\",\r\n\r\n    /**\r\n     * Large text type, for more than 4000 characters.\r\n     */\r\n    LargeText = \"LargeText\",\r\n\r\n    /**\r\n     * Number type.\r\n     */\r\n    Numeric = \"Numeric\",\r\n\r\n    /**\r\n     * Location type, with latitude (lt), longitude (lg), name (n).\r\n     */\r\n    Location = \"Location\",\r\n\r\n    /**\r\n     * Epoch timestamp type.\r\n     */\r\n    DateTime = \"DateTime\",\r\n\r\n    /**\r\n     * Date type, with \"YYYY-MM-DD\" format.\r\n     */\r\n    Date = \"Date\",\r\n\r\n    /**\r\n     * User ID type.\r\n     */\r\n    UserId = \"UserId\",\r\n\r\n    /**\r\n     * AttachmentList type, with list of attachments.\r\n     */\r\n    AttachmentList = \"AttachmentList\"\r\n}","/**\r\n * This enum represents different types of subscriptions.\r\n * @category Data Model\r\n */\r\nexport enum SubscriptionType {\r\n    /**\r\n     * A group type subscription represents a set of users/members.\r\n     */\r\n    Group = \"Group\",\r\n\r\n    /**\r\n     * A user type subscription represents just one user.\r\n     */\r\n    User = \"User\"\r\n}","import { BaseApi } from \"../BaseApi\";\r\nimport { ApiType } from \"../ApiType\";\r\nimport { ApiError, ApiErrorCategory, getApiError } from \"../ApiError\";\r\nimport { Action } from \"../../dataModels/Action\";\r\nimport { Utils } from \"../../Utils\";\r\n\r\n/**\r\n * API to create action.\r\n * \r\n * Usage:\r\n * ```typescript\r\n * let action: actionSDK.Action;\r\n * let request = new actionSDK.CreateAction.Request(action);\r\n * let response = await actionSDK.executeApi(request) as actionSDK.CreateAction.Response;\r\n * let actionId = response.actionId;\r\n * ```\r\n * @category Action CRUD API\r\n */\r\nexport namespace CreateAction {\r\n    /**\r\n     * Request body for create action API.\r\n     */\r\n    export class Request extends BaseApi.Request {\r\n        /**\r\n         * Action object to create.\r\n         */\r\n        public action: Action;\r\n\r\n        /**\r\n         * Constructor to create a request object.\r\n         * @hidden\r\n         */\r\n        constructor(action: Action) {\r\n            super(ApiType.CreateAction);\r\n            this.action = action;\r\n        }\r\n\r\n        /**\r\n         * Validation.\r\n         * @internal\r\n         */\r\n        public validate() {\r\n            if (Utils.isEmptyObject(this.action)) {\r\n                throw getApiError(ApiErrorCategory.InvalidRequest, null, \"CreateAction - Invalid action!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Response body for create action API.\r\n     */\r\n    export class Response extends BaseApi.Response {\r\n        /**\r\n         * ID of the action object created.\r\n         */\r\n        public actionId: string;\r\n\r\n        /**\r\n         * Constructor to create a response object.\r\n         * @ignore\r\n         */\r\n        constructor(id: string, actionId: string, error?: ApiError) {\r\n            super(id, error);\r\n            this.actionId = actionId;\r\n        }\r\n    }\r\n}","import { BaseApi } from \"../BaseApi\";\r\nimport { ApiType } from \"../ApiType\";\r\nimport { ApiErrorCategory, getApiError } from \"../ApiError\";\r\nimport { ActionUpdateInfo } from \"../../dataModels/ActionUpdateInfo\";\r\nimport { Utils } from \"../../Utils\";\r\n\r\n/**\r\n * API to update action.\r\n * \r\n * Usage:\r\n * ```typescript\r\n * let actionUpdateInfo: actionSDK.ActionUpdateInfo;\r\n * let request = new actionSDK.UpdateAction.Request(actionUpdateInfo);\r\n * let response = await actionSDK.executeApi(request) as actionSDK.UpdateAction.Response;\r\n * let success = response.success;\r\n * ```\r\n * @category Action CRUD API\r\n */\r\nexport namespace UpdateAction {\r\n    /**\r\n     * Request body for update action API.\r\n     */\r\n    export class Request extends BaseApi.Request {\r\n        /**\r\n         * Data required to update action.\r\n         */\r\n        public actionUpdateInfo: ActionUpdateInfo;\r\n\r\n        /**\r\n         * Constructor to create a request object.\r\n         * @hidden\r\n         */\r\n        constructor(actionUpdateInfo: ActionUpdateInfo) {\r\n            super(ApiType.UpdateAction);\r\n            this.actionUpdateInfo = actionUpdateInfo;\r\n        }\r\n\r\n        /**\r\n         * Validation.\r\n         * @internal\r\n         */\r\n        public validate() {\r\n            if (Utils.isEmptyObject(this.actionUpdateInfo) || Utils.isEmptyString(this.actionUpdateInfo.id)) {\r\n                throw getApiError(ApiErrorCategory.InvalidRequest, null, \"UpdateAction - Invalid actionUpdateInfo!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Response body for update action API.\r\n     */\r\n    export class Response extends BaseApi.Response { }\r\n}","import { BaseApi } from \"../BaseApi\";\r\nimport { ApiType } from \"../ApiType\";\r\nimport { ApiErrorCategory, getApiError } from \"../ApiError\";\r\nimport { Utils } from \"../../Utils\";\r\n\r\n/**\r\n * API to delete action.\r\n * \r\n * Usage:\r\n * ```typescript\r\n * let actionId: string;\r\n * let request = new actionSDK.DeleteAction.Request(actionId);\r\n * let response = await actionSDK.executeApi(request) as actionSDK.DeleteAction.Response;\r\n * let success = response.success;\r\n * ```\r\n * @category Action CRUD API\r\n */\r\nexport namespace DeleteAction {\r\n    /**\r\n     * Request body for delete action API.\r\n     */\r\n    export class Request extends BaseApi.Request {\r\n        /**\r\n         * ID of the Action to delete.\r\n         */\r\n        public actionId: string;\r\n\r\n        /**\r\n         * Constructor to create a request object.\r\n         * @hidden\r\n         */\r\n        constructor(actionId: string) {\r\n            super(ApiType.DeleteAction);\r\n            this.actionId = actionId;\r\n        }\r\n\r\n        /**\r\n         * Validation.\r\n         * @internal\r\n         */\r\n        public validate() {\r\n            if (Utils.isEmptyString(this.actionId)) {\r\n                throw getApiError(ApiErrorCategory.InvalidRequest, null, \"DeleteAction - Invalid actionId!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Response body for delete action API.\r\n     */\r\n    export class Response extends BaseApi.Response { }\r\n}","import { BaseApi } from \"../BaseApi\";\r\nimport { ApiType } from \"../ApiType\";\r\nimport { ApiError, ApiErrorCategory, getApiError } from \"../ApiError\";\r\nimport { Action } from \"../../dataModels/Action\";\r\nimport { Utils } from \"../../Utils\";\r\n\r\n/**\r\n * API to get action.\r\n * \r\n * Usage:\r\n * ```typescript\r\n * let actionId: string;\r\n * let request = new actionSDK.GetAction.Request(actionId);\r\n * let response = await actionSDK.executeApi(request) as actionSDK.GetAction.Response;\r\n * let action = response.action;\r\n * ```\r\n * @category Action CRUD API\r\n */\r\nexport namespace GetAction {\r\n    /**\r\n     * Request body for get action API.\r\n     */\r\n    export class Request extends BaseApi.Request {\r\n        /**\r\n         * ID of the Action to get.\r\n         */\r\n        public actionId: string;\r\n\r\n        /**\r\n         * Constructor to create a request object.\r\n         * @hidden\r\n         */\r\n        constructor(actionId: string) {\r\n            super(ApiType.GetAction);\r\n            this.actionId = actionId;\r\n        }\r\n\r\n        /**\r\n         * Validation.\r\n         * @internal\r\n         */\r\n        public validate() {\r\n            if (Utils.isEmptyString(this.actionId)) {\r\n                throw getApiError(ApiErrorCategory.InvalidRequest, null, \"GetAction - Invalid actionId!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Response body for get action API.\r\n     */\r\n    export class Response extends BaseApi.Response {\r\n        /**\r\n         * The requested Action object.\r\n         */\r\n        public action: Action;\r\n\r\n        /**\r\n         * Constructor to create a response object.\r\n         * @ignore\r\n         */\r\n        constructor(id: string, action: Action, error?: ApiError) {\r\n            super(id, error);\r\n            this.action = action;\r\n        }\r\n    }\r\n}","import { BaseApi } from \"../BaseApi\";\r\nimport { ApiType } from \"../ApiType\";\r\nimport { ApiError, ApiErrorCategory, getApiError } from \"../ApiError\";\r\nimport { ActionDataRow } from \"../../dataModels/ActionDataRow\";\r\nimport { Utils } from \"../../Utils\";\r\n\r\n/**\r\n * API to add an action data-row.\r\n * \r\n * Usage:\r\n * ```typescript\r\n * let dataRow: actionSDK.ActionDataRow;\r\n * let request = new actionSDK.AddActionDataRow.Request(dataRow);\r\n * let response = await actionSDK.executeApi(request) as actionSDK.AddActionDataRow.Response;\r\n * let dataRowId = response.dataRowId;\r\n * ```\r\n * @category Data Row CRUD API\r\n */\r\nexport namespace AddActionDataRow {\r\n    /**\r\n     * Request body for add action data-row API.\r\n     */\r\n    export class Request extends BaseApi.Request {\r\n        /**\r\n         * The data-row object to add.\r\n         */\r\n        public dataRow: ActionDataRow;\r\n\r\n        /**\r\n         * Constructor to create a request object.\r\n         * @hidden\r\n         */\r\n        constructor(dataRow: ActionDataRow) {\r\n            super(ApiType.AddActionDataRow);\r\n            this.dataRow = dataRow;\r\n        }\r\n\r\n        /**\r\n         * Validation.\r\n         * @internal\r\n         */\r\n        public validate() {\r\n            if (Utils.isEmptyObject(this.dataRow) || Utils.isEmptyString(this.dataRow.actionId) || Utils.isEmptyObject(this.dataRow.columnValues)) {\r\n                throw getApiError(ApiErrorCategory.InvalidRequest, null, \"AddActionDataRow - Invalid dataRow!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Response body for add action data-row API.\r\n     */\r\n    export class Response extends BaseApi.Response {\r\n        /**\r\n         * ID of the data-row created.\r\n         */\r\n        public dataRowId: string;\r\n\r\n        /**\r\n         * Constructor to create a response object.\r\n         * @ignore\r\n         */\r\n        constructor(id: string, dataRowId: string, error?: ApiError) {\r\n            super(id, error);\r\n            this.dataRowId = dataRowId;\r\n        }\r\n    }\r\n}","import { BaseApi } from \"../BaseApi\";\r\nimport { ApiType } from \"../ApiType\";\r\nimport { ApiErrorCategory, getApiError } from \"../ApiError\";\r\nimport { ActionDataRow } from \"../../dataModels/ActionDataRow\";\r\nimport { Utils } from \"../../Utils\";\r\n\r\n/**\r\n * API to update action data-row.\r\n * \r\n * Usage:\r\n * ```typescript\r\n * let dataRow: actionSDK.ActionDataRow;\r\n * let request = new actionSDK.UpdateActionDataRow.Request(dataRow);\r\n * let response = await actionSDK.executeApi(request) as actionSDK.UpdateActionDataRow.Response;\r\n * let success = response.success;\r\n * ```\r\n * @category Data Row CRUD API\r\n */\r\nexport namespace UpdateActionDataRow {\r\n    /**\r\n     * Request body for update action data-row API.\r\n     */\r\n    export class Request extends BaseApi.Request {\r\n        /**\r\n         * The data-row object to update.\r\n         * It should contain the row ID and the updated column values.\r\n         */\r\n        public dataRow: ActionDataRow;\r\n\r\n        /**\r\n         * Constructor to create a request object.\r\n         * @hidden\r\n         */\r\n        constructor(dataRow: ActionDataRow) {\r\n            super(ApiType.UpdateActionDataRow);\r\n            this.dataRow = dataRow;\r\n        }\r\n\r\n        /**\r\n         * Validation\r\n         * @internal\r\n         */\r\n        public validate() {\r\n            if (Utils.isEmptyObject(this.dataRow) || Utils.isEmptyString(this.dataRow.id) || Utils.isEmptyString(this.dataRow.actionId) || Utils.isEmptyObject(this.dataRow.columnValues)) {\r\n                throw getApiError(ApiErrorCategory.InvalidRequest, null, \"UpdateActionDataRow - Invalid dataRow!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Response body for udpate action data-row API.\r\n     */\r\n    export class Response extends BaseApi.Response { }\r\n}","import { BaseApi } from \"../BaseApi\";\r\nimport { ApiType } from \"../ApiType\";\r\nimport { ApiError, ApiErrorCategory, getApiError } from \"../ApiError\";\r\nimport { ActionDataRow } from \"../../dataModels/ActionDataRow\";\r\nimport { Utils } from \"../../Utils\";\r\n\r\n/**\r\n * API to add or update multiple action data-rows in batch.\r\n * \r\n * Usage:\r\n * ```typescript\r\n * let addRows: actionSDK.ActionDataRow[];\r\n * let updateRows: actionSDK.ActionDataRow[];\r\n * let request = new actionSDK.AddOrUpdateActionDataRows.Request(addRows, updateRows);\r\n * let response = await actionSDK.executeApi(request) as actionSDK.AddOrUpdateActionDataRows.Response;\r\n * let addedDataRowIds = response.addedDataRowIds;\r\n * ```\r\n * @category Data Row CRUD API\r\n */\r\nexport namespace AddOrUpdateActionDataRows {\r\n    /**\r\n     * Request body for add/update multiple action data-rows API.\r\n     */\r\n    export class Request extends BaseApi.Request {\r\n        /**\r\n         * List of data-rows to add.\r\n         */\r\n        public addRows: ActionDataRow[];\r\n\r\n        /**\r\n         * List of data-rows to update.\r\n         */\r\n        public updateRows: ActionDataRow[];\r\n\r\n        /**\r\n         * Constructor to create a request object.\r\n         * @hidden\r\n         */\r\n        constructor(addRows: ActionDataRow[], updateRows: ActionDataRow[]) {\r\n            super(ApiType.AddOrUpdateActionDataRows);\r\n            this.addRows = addRows;\r\n            this.updateRows = updateRows;\r\n        }\r\n\r\n        /**\r\n         * Validation.\r\n         * @internal\r\n         */\r\n        public validate() {\r\n            if ((!this.addRows || this.addRows.length == 0) && (!this.updateRows || this.updateRows.length == 0)) {\r\n                throw getApiError(ApiErrorCategory.InvalidRequest, null, `AddOrUpdateActionDataRows - Invalid addRows and updateRows!`);\r\n            }\r\n            if (this.addRows && this.addRows.length > 0) {\r\n                this.addRows.forEach((dataRow, index) => {\r\n                    if (Utils.isEmptyObject(dataRow) || Utils.isEmptyString(dataRow.actionId) || Utils.isEmptyObject(dataRow.columnValues)) {\r\n                        throw getApiError(ApiErrorCategory.InvalidRequest, null, `AddOrUpdateActionDataRows - Invalid addRow at index:${index}!`);\r\n                    }\r\n                });\r\n            }\r\n            if (this.updateRows && this.updateRows.length > 0) {\r\n                this.updateRows.forEach((dataRow, index) => {\r\n                    if (Utils.isEmptyObject(dataRow) || Utils.isEmptyString(dataRow.id) || Utils.isEmptyString(dataRow.actionId) || Utils.isEmptyObject(dataRow.columnValues)) {\r\n                        throw getApiError(ApiErrorCategory.InvalidRequest, null, `AddOrUpdateActionDataRows - Invalid updateRow at index:${index}!`);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Response body for add/update multiple action data-rows API.\r\n     */\r\n    export class Response extends BaseApi.Response {\r\n        /**\r\n         * List of IDs for the newly added data-rows.\r\n         */\r\n        public addedDataRowIds: string[];\r\n\r\n        /**\r\n         * Constructor to create a response object.\r\n         * @ignore\r\n         */\r\n        constructor(id: string, addedDataRowIds: string[], error?: ApiError) {\r\n            super(id, error);\r\n            this.addedDataRowIds = addedDataRowIds;\r\n        }\r\n    }\r\n}","import { BaseApi } from \"../BaseApi\";\r\nimport { ApiType } from \"../ApiType\";\r\nimport { ApiErrorCategory, getApiError } from \"../ApiError\";\r\nimport { Utils } from \"../../Utils\";\r\n\r\n/**\r\n * API to delete action data-row.\r\n * \r\n * Usage:\r\n * ```typescript\r\n * let actionId: string;\r\n * let dataTableName: string; // It can be null, if the action contains only one data-table\r\n * let dataRowId: string;\r\n * let request = new actionSDK.DeleteActionDataRow.Request(actionId, dataRowId, dataTableName);\r\n * let response = await actionSDK.executeApi(request) as actionSDK.DeleteActionDataRow.Response;\r\n * let success = response.success;\r\n * ```\r\n * @category Data Row CRUD API\r\n */\r\nexport namespace DeleteActionDataRow {\r\n    /**\r\n     * Request body for delete action data-row API.\r\n     */\r\n    export class Request extends BaseApi.Request {\r\n        /**\r\n         * ID of the action.\r\n         */\r\n        public actionId: string;\r\n\r\n        /**\r\n         * ID of the data-table.\r\n         * It can be null, if the action contains only one data-table.\r\n         */\r\n        public dataTableName: string;\r\n\r\n        /**\r\n         * ID of the data-row to delete.\r\n         */\r\n        public dataRowId: string;\r\n\r\n        /**\r\n         * Constructor to create a request object.\r\n         * @hidden\r\n         */\r\n        constructor(actionId: string, dataRowId: string, dataTableName?: string) {\r\n            super(ApiType.DeleteActionDataRow);\r\n            this.actionId = actionId;\r\n            this.dataTableName = dataTableName;\r\n            this.dataRowId = dataRowId;\r\n        }\r\n\r\n        /**\r\n         * Validation.\r\n         * @internal\r\n         */\r\n        public validate() {\r\n            if (Utils.isEmptyString(this.actionId) || Utils.isEmptyString(this.dataRowId)) {\r\n                throw getApiError(ApiErrorCategory.InvalidRequest, null, \"DeleteActionDataRow - Invalid actionId/dataRowId!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Response body for delete action data-row API.\r\n     */\r\n    export class Response extends BaseApi.Response { }\r\n}","import { BaseApi } from \"../BaseApi\";\r\nimport { ApiType } from \"../ApiType\";\r\nimport { ApiError, ApiErrorCategory, getApiError } from \"../ApiError\";\r\nimport { ActionDataRow } from \"../../dataModels/ActionDataRow\";\r\nimport { Utils } from \"../../Utils\";\r\n\r\n/**\r\n * API to get action data-row.\r\n * \r\n * Usage:\r\n * ```typescript\r\n * let actionId: string;\r\n * let dataTableName: string; // It can be null, if the action contains only one data-table\r\n * let dataRowId: string;\r\n * let request = new actionSDK.GetActionDataRow.Request(actionId, dataRowId, dataTableName);\r\n * let response = await actionSDK.executeApi(request) as actionSDK.GetActionDataRow.Response;\r\n * let dataRow = response.dataRow;\r\n * ```\r\n * @category Data Row CRUD API\r\n */\r\nexport namespace GetActionDataRow {\r\n    /**\r\n     * Request body for get action data-row API.\r\n     */\r\n    export class Request extends BaseApi.Request {\r\n        /**\r\n         * ID of the action.\r\n         */\r\n        public actionId: string;\r\n\r\n        /**\r\n         * Name of the data-table.\r\n         * It can be null, if the action contains only one data-table.\r\n         */\r\n        public dataTableName: string;\r\n\r\n        /**\r\n         * ID of the the data-row to fetch.\r\n         */\r\n        public dataRowId: string;\r\n\r\n        /**\r\n         * Constructor to create a request object.\r\n         * @hidden\r\n         */\r\n        constructor(actionId: string, dataRowId: string, dataTableName?: string) {\r\n            super(ApiType.GetActionDataRow);\r\n            this.actionId = actionId;\r\n            this.dataTableName = dataTableName;\r\n            this.dataRowId = dataRowId;\r\n        }\r\n\r\n        /**\r\n         * Validation.\r\n         * @internal\r\n         */\r\n        public validate() {\r\n            if (Utils.isEmptyString(this.actionId) || Utils.isEmptyString(this.dataRowId)) {\r\n                throw getApiError(ApiErrorCategory.InvalidRequest, null, \"GetActionDataRow - Invalid actionId/dataRowId!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Response body for get action data-row API.\r\n     */\r\n    export class Response extends BaseApi.Response {\r\n        /**\r\n         * The requested data-row.\r\n         */\r\n        public dataRow: ActionDataRow;\r\n\r\n        /**\r\n         * Constructor to create a response object.\r\n         * @ignore\r\n         */\r\n        constructor(id: string, dataRow: ActionDataRow, error?: ApiError) {\r\n            super(id, error);\r\n            this.dataRow = dataRow;\r\n        }\r\n    }\r\n}","import { BaseApi } from \"../BaseApi\";\r\nimport { ApiType } from \"../ApiType\";\r\nimport { ApiError, ApiErrorCategory, getApiError } from \"../ApiError\";\r\nimport { ActionDataRow } from \"../../dataModels/ActionDataRow\";\r\nimport { Utils } from \"../../Utils\";\r\n\r\n/**\r\n * API to get action data-rows.\r\n * \r\n * Usage:\r\n * ```typescript\r\n * let actionId: string;\r\n * let dataTableName: string; // It can be null, if the action contains only one data-table\r\n * let creatorId: string; // If this is null, no creator filter will be applied\r\n * let request = new actionSDK.GetActionDataRows.Request(actionId, creatorId, null, 100, dataTableName);\r\n * let response = await actionSDK.executeApi(request) as actionSDK.GetActionDataRows.Response;\r\n * let dataRows = response.dataRows;\r\n * ```\r\n * @category Data Row CRUD API\r\n */\r\nexport namespace GetActionDataRows {\r\n    /**\r\n     * Request body for get action data-rows API.\r\n     */\r\n    export class Request extends BaseApi.Request {\r\n        /**\r\n         * ID of the action.\r\n         */\r\n        public actionId: string;\r\n\r\n        /**\r\n         * Name of the data-table.\r\n         * It can be null, if the action contains only one data-table.\r\n         */\r\n        public dataTableName: string;\r\n\r\n        /**\r\n         * ID of the creator whose data-rows need to be fetched.\r\n         * If this is null, no creator filter will be applied.\r\n         */\r\n        public creatorId: string;\r\n\r\n        /**\r\n         * Continuation token, if any, to fetch next set of rows.\r\n         */\r\n        public continuationToken: string;\r\n\r\n        /**\r\n         * Maximum number of data-rows to fetch.\r\n         * Default value is 30.\r\n         */\r\n        public pageSize: number;\r\n\r\n        /**\r\n         * Constructor to create a request object.\r\n         * @hidden\r\n         */\r\n        constructor(actionId: string, creatorId?: string, continuationToken?: string, pageSize?: number, dataTableName?: string) {\r\n            super(ApiType.GetActionDataRows);\r\n            this.actionId = actionId;\r\n            this.dataTableName = dataTableName;\r\n            this.creatorId = creatorId;\r\n            this.continuationToken = continuationToken;\r\n            this.pageSize = pageSize || 30;\r\n        }\r\n\r\n        /**\r\n         * Validation.\r\n         * @internal\r\n         */\r\n        public validate() {\r\n            if (Utils.isEmptyString(this.actionId)) {\r\n                throw getApiError(ApiErrorCategory.InvalidRequest, null, \"GetActionDataRows - Invalid actionId!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Response body for get action data-rows API.\r\n     */\r\n    export class Response extends BaseApi.Response {\r\n        /**\r\n         * The requested data-rows for the current batch.\r\n         */\r\n        public dataRows: ActionDataRow[];\r\n\r\n        /**\r\n         * The token to fetch data-rows in the next batch.\r\n         */\r\n        public continuationToken: string;\r\n\r\n        /**\r\n         * Constructor to create a response object.\r\n         * @ignore\r\n         */\r\n        constructor(id: string, dataRows: ActionDataRow[], continuationToken?: string, error?: ApiError) {\r\n            super(id, error);\r\n            this.dataRows = dataRows;\r\n            this.continuationToken = continuationToken;\r\n        }\r\n    }\r\n}","import { BaseApi } from \"../BaseApi\";\r\nimport { ApiType } from \"../ApiType\";\r\nimport { ApiError, ApiErrorCategory, getApiError } from \"../ApiError\";\r\nimport { ActionDataRowsSummary } from \"../../dataModels/ActionDataRowsSummary\";\r\nimport { Utils } from \"../../Utils\";\r\n\r\n/**\r\n * API to add action data-rows' summary.\r\n * \r\n * Usage:\r\n * ```typescript\r\n * let actionId: string;\r\n * let dataTableName: string; // It can be null, if the action contains only one data-table\r\n * let request = new actionSDK.GetActionDataRowsSummary.Request(actionId, dataTableName);\r\n * let response = await actionSDK.executeApi(request) as actionSDK.GetActionDataRowsSummary.Response;\r\n * let summary = response.summary;\r\n * ```\r\n * @category Data Row CRUD API\r\n */\r\nexport namespace GetActionDataRowsSummary {\r\n    /**\r\n     * Request body for get action data-rows' summary API.\r\n     */\r\n    export class Request extends BaseApi.Request {\r\n        /**\r\n         * ID of the action.\r\n         */\r\n        public actionId: string;\r\n\r\n        /**\r\n         * Name of the data-table.\r\n         * It can be null, if the action contains only one data-table.\r\n         */\r\n        public dataTableName: string;\r\n\r\n        /**\r\n         * Flag denoting if default aggregates will be included in the response.\r\n         * Default is false.\r\n         */\r\n        public addDefaultAggregates: boolean;\r\n\r\n        /**\r\n         * Constructor to create a request object\r\n         * @hidden\r\n         */\r\n        constructor(actionId: string, addDefaultAggregates?: boolean, dataTableName?: string) {\r\n            super(ApiType.GetActionDataRowsSummary);\r\n            this.actionId = actionId;\r\n            this.dataTableName = dataTableName;\r\n            this.addDefaultAggregates = addDefaultAggregates || false;\r\n        }\r\n\r\n        /**\r\n         * Validation\r\n         * @internal\r\n         */\r\n        public validate() {\r\n            if (Utils.isEmptyString(this.actionId)) {\r\n                throw getApiError(ApiErrorCategory.InvalidRequest, null, \"GetActionDataRowsSummary - Invalid actionId!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Response body for get action data-rows' summary API.\r\n     */\r\n    export class Response extends BaseApi.Response {\r\n        /**\r\n         * The requested data-rows' summary.\r\n         */\r\n        public summary: ActionDataRowsSummary;\r\n\r\n        /**\r\n         * Constructor to create a response object.\r\n         * @ignore\r\n         */\r\n        constructor(id: string, summary: ActionDataRowsSummary, error?: ApiError) {\r\n            super(id, error);\r\n            this.summary = summary;\r\n        }\r\n    }\r\n}","import { BaseApi } from \"../BaseApi\";\r\nimport { ApiType } from \"../ApiType\";\r\nimport { ApiErrorCategory, getApiError } from \"../ApiError\";\r\nimport { Utils } from \"../../Utils\";\r\n\r\n/**\r\n * API to download action data-rows' result.\r\n * \r\n * Usage:\r\n * ```typescript\r\n * let actionId: string;\r\n * let dataTableName: string; // It can be null, if the action contains only one data-table\r\n * let request = new actionSDK.DownloadActionDataRowsResult.Request(actionId, dataTableName);\r\n * let response = await actionSDK.executeApi(request) as actionSDK.DownloadActionDataRowsResult.Response;\r\n * let success = response.success;\r\n * ```\r\n * @category Data Row CRUD API\r\n */\r\nexport namespace DownloadActionDataRowsResult {\r\n    /**\r\n     * Request body for download action data-rows' result API.\r\n     */\r\n    export class Request extends BaseApi.Request {\r\n        /**\r\n         * ID of the action.\r\n         */\r\n        public actionId: string;\r\n\r\n        /**\r\n         * Name of the data-table.\r\n         * It can be null, if the action contains only one data-table.\r\n         */\r\n        public dataTableName: string;\r\n\r\n        /**\r\n         * Constructor to create a request object.\r\n         * @hidden\r\n         */\r\n        constructor(actionId: string, dataTableName?: string) {\r\n            super(ApiType.DownloadActionDataRowsResult);\r\n            this.actionId = actionId;\r\n            this.dataTableName = dataTableName;\r\n        }\r\n\r\n        /**\r\n         * Validation.\r\n         * @internal\r\n         */\r\n        public validate() {\r\n            if (Utils.isEmptyString(this.actionId)) {\r\n                throw getApiError(ApiErrorCategory.InvalidRequest, null, \"DownloadActionDataRowsResult - Invalid actionId!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Response body for download action data-rows' result API.\r\n     */\r\n    export class Response extends BaseApi.Response { }\r\n}","import { BaseApi } from \"../BaseApi\";\r\nimport { ApiType } from \"../ApiType\";\r\nimport { ApiError } from \"../ApiError\";\r\n\r\n/**\r\n * API to get localized strings for the current action package.\r\n * \r\n * Usage:\r\n * ```typescript\r\n * let request = new actionSDK.GetLocalizedStrings.Request();\r\n * let response = await actionSDK.executeApi(request) as actionSDK.GetLocalizedStrings.Response;\r\n * let strings = response.strings;\r\n * ```\r\n * @category Action Package API\r\n */\r\nexport namespace GetLocalizedStrings {\r\n    /**\r\n     * Request body for get localized strings API.\r\n     */\r\n    export class Request extends BaseApi.Request {\r\n        /**\r\n         * Constructor to create a request object.\r\n         * @hidden\r\n         */\r\n        constructor() {\r\n            super(ApiType.GetLocalizedStrings);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Response body for get localized strings API.\r\n     */\r\n    export class Response extends BaseApi.Response {\r\n        /**\r\n         * The localized strings.\r\n         */\r\n        public strings: { [key: string]: string };\r\n\r\n        /**\r\n         * Constructor to create a response object\r\n         * @ignore\r\n         */\r\n        constructor(id: string, strings: { [key: string]: string }, error?: ApiError) {\r\n            super(id, error);\r\n            this.strings = strings;\r\n        }\r\n    }\r\n}","import { BaseApi } from \"../BaseApi\";\r\nimport { ApiType } from \"../ApiType\";\r\nimport { ApiError, ApiErrorCategory, getApiError } from \"../ApiError\";\r\nimport { Utils } from \"../../Utils\";\r\nimport { Subscription } from \"../../dataModels/Subscription\";\r\nimport { SubscriptionMember } from \"../../dataModels/SubscriptionMember\";\r\n\r\n/**\r\n * API to get profiles of a subscription members.\r\n * \r\n * Usage:\r\n * ```typescript\r\n * let subscription: Subscription;\r\n * let memberIds: string[]; // Member IDs to filter\r\n * let request = new actionSDK.GetSubscriptionMembers.Request(subscription, memberIds);\r\n * let response = await actionSDK.executeApi(request) as actionSDK.GetSubscriptionMembers.Response;\r\n * let members = response.members;\r\n * ```\r\n * @category Subscription API\r\n */\r\nexport namespace GetSubscriptionMembers {\r\n    /**\r\n     * Request body for get subscription members API.\r\n     */\r\n    export class Request extends BaseApi.Request {\r\n        /**\r\n         * The Subscription.\r\n         */\r\n        public subscription: Subscription;\r\n\r\n        /**\r\n         * List of member IDs to filter.\r\n         */\r\n        public memberIds: string[];\r\n\r\n        /**\r\n         * Constructor to create a request object.\r\n         * @hidden\r\n         */\r\n        constructor(subscription: Subscription, memberIds: string[]) {\r\n            super(ApiType.GetSubscriptionMembers);\r\n            this.subscription = subscription;\r\n            this.memberIds = memberIds;\r\n        }\r\n\r\n        /**\r\n         * Validation.\r\n         * @internal\r\n         */\r\n        public validate() {\r\n            if (Utils.isEmptyObject(this.subscription) || Utils.isEmptyObject(this.memberIds)) {\r\n                throw getApiError(ApiErrorCategory.InvalidRequest, null, \"GetActionSubscriptionMembers - Invalid subscription/memberIds!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Response body for get subscription members API.\r\n     */\r\n    export class Response extends BaseApi.Response {\r\n        /**\r\n         * The requested profiles of the members.\r\n         */\r\n        public members: SubscriptionMember[];\r\n\r\n        /**\r\n         * ID of the members whose profiles could not be found.\r\n         */\r\n        public memberIdsNotFound: string[];\r\n\r\n        /**\r\n         * Constructor to create a response object.\r\n         * @ignore\r\n         */\r\n        constructor(id: string, members: SubscriptionMember[], memberIdsNotFound?: string[], error?: ApiError) {\r\n            super(id, error);\r\n            this.members = members;\r\n            this.memberIdsNotFound = memberIdsNotFound;\r\n        }\r\n    }\r\n}","import { BaseApi } from \"../BaseApi\";\r\nimport { ApiType } from \"../ApiType\";\r\nimport { ApiError, ApiErrorCategory, getApiError } from \"../ApiError\";\r\nimport { Utils } from \"../../Utils\";\r\nimport { Subscription } from \"../../dataModels/Subscription\";\r\n\r\n/**\r\n * API to get count of members in a subscription.\r\n * \r\n * Usage:\r\n * ```typescript\r\n * let subscription: Subscription;\r\n * let request = new actionSDK.GetSubscriptionMemberCount.Request(subscription);\r\n * let response = await actionSDK.executeApi(request) as actionSDK.GetSubscriptionMemberCount.Response;\r\n * let memberCount = response.memberCount;\r\n * ```\r\n * @category Subscription API\r\n */\r\nexport namespace GetSubscriptionMemberCount {\r\n    /**\r\n     * Request body for get subscription members' count API.\r\n     */\r\n    export class Request extends BaseApi.Request {\r\n        /**\r\n         * The Subscription.\r\n         */\r\n        public subscription: Subscription;\r\n\r\n        /**\r\n         * Constructor to create a request object.\r\n         * @hidden\r\n         */\r\n        constructor(subscription: Subscription) {\r\n            super(ApiType.GetSubscriptionMemberCount);\r\n            this.subscription = subscription;\r\n        }\r\n\r\n        /**\r\n         * Validation\r\n         * @internal\r\n         */\r\n        public validate() {\r\n            if (Utils.isEmptyObject(this.subscription)) {\r\n                throw getApiError(ApiErrorCategory.InvalidRequest, null, \"GetSubscriptionMemberCount - Invalid subscription!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Response body for get subscription members' count API.\r\n     */\r\n    export class Response extends BaseApi.Response {\r\n        /**\r\n         * The requested members count.\r\n         */\r\n        public memberCount: number;\r\n\r\n        /**\r\n         * Constructor to create a response object.\r\n         * @ignore\r\n         */\r\n        constructor(id: string, memberCount: number, error?: ApiError) {\r\n            super(id, error);\r\n            this.memberCount = memberCount;\r\n        }\r\n    }\r\n}","import { BaseApi } from \"../BaseApi\";\r\nimport { ApiType } from \"../ApiType\";\r\nimport { ApiError, ApiErrorCategory, getApiError } from \"../ApiError\";\r\nimport { Utils } from \"../../Utils\";\r\nimport { SubscriptionMember } from \"../../dataModels/SubscriptionMember\";\r\n\r\n/**\r\n * API to get profiles of the non-participants/non-responders of an action subscription.\r\n * \r\n * Usage:\r\n * ```typescript\r\n * let actionId: string;\r\n * let subscriptionId: string; // It can be null, if the action contains only one subscription\r\n * let request = new actionSDK.GetActionSubscriptionNonParticipants.Request(actionId, subscriptionId);\r\n * let response = await actionSDK.executeApi(request) as actionSDK.GetActionSubscriptionNonParticipants.Response;\r\n * let nonParticipants = response.nonParticipants;\r\n * ```\r\n * @category Subscription API\r\n */\r\nexport namespace GetActionSubscriptionNonParticipants {\r\n    /**\r\n     * Request body for get action subscription non-participants API.\r\n     */\r\n    export class Request extends BaseApi.Request {\r\n        /**\r\n         * ID of the action.\r\n         */\r\n        public actionId: string;\r\n\r\n        /**\r\n         * ID of the subscription.\r\n         */\r\n        public subscriptionId: string;\r\n\r\n        /**\r\n         * Constructor to create a request object.\r\n         * @hidden\r\n         */\r\n        constructor(actionId: string, subscriptionId?: string) {\r\n            super(ApiType.GetActionSubscriptionNonParticipants);\r\n            this.actionId = actionId;\r\n            this.subscriptionId = subscriptionId;\r\n        }\r\n\r\n        /**\r\n         * Validation.\r\n         * @internal\r\n         */\r\n        public validate() {\r\n            if (Utils.isEmptyString(this.actionId)) {\r\n                throw getApiError(ApiErrorCategory.InvalidRequest, null, \"GetActionSubscriptionNonParticipants - Invalid actionId!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Response body for get action subscription non-participants API.\r\n     */\r\n    export class Response extends BaseApi.Response {\r\n        /**\r\n         * The requested non-participants' profiles.\r\n         */\r\n        public nonParticipants: SubscriptionMember[];\r\n\r\n        /**\r\n         * The total number of non-participants.\r\n         */\r\n        public nonParticipantCount: number;\r\n\r\n        /**\r\n         * Constructor to create a response object.\r\n         * @ignore\r\n         */\r\n        constructor(id: string, nonParticipants: SubscriptionMember[], nonParticipantCount: number, error?: ApiError) {\r\n            super(id, error);\r\n            this.nonParticipants = nonParticipants;\r\n            this.nonParticipantCount = nonParticipantCount;\r\n        }\r\n    }\r\n}","import { BaseApi } from \"../BaseApi\";\r\nimport { ApiType } from \"../ApiType\";\r\nimport { ApiError } from \"../ApiError\";\r\nimport { ActionSdkContext } from \"../../dataModels/ActionSdkContext\";\r\n\r\n/**\r\n * API to get current context for the action package view.\r\n * \r\n * Usage:\r\n * ```typescript\r\n * let request = new actionSDK.GetContext.Request();\r\n * let response = await actionSDK.executeApi(request) as actionSDK.GetContext.Response;\r\n * let context = response.context;\r\n * ```\r\n * @category Misc API\r\n */\r\nexport namespace GetContext {\r\n    /**\r\n     * Request body for get context API.\r\n     */\r\n    export class Request extends BaseApi.Request {\r\n        /**\r\n         * Constructor to create a request object.\r\n         * @hidden\r\n         */\r\n        constructor() {\r\n            super(ApiType.GetContext);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Response body for get context API.\r\n     */\r\n    export class Response extends BaseApi.Response {\r\n        /**\r\n         * The context.\r\n         */\r\n        public context: ActionSdkContext;\r\n\r\n        /**\r\n         * Constructor to create a response object.\r\n         * @ignore\r\n         */\r\n        constructor(id: string, context: ActionSdkContext, error?: ApiError) {\r\n            super(id, error);\r\n            this.context = context;\r\n        }\r\n    }\r\n}","import { BaseApi } from \"../BaseApi\";\r\nimport { ApiType } from \"../ApiType\";\r\n\r\n/**\r\n * API to hide loading indicator for current action package view.\r\n * This is mandatory if `showLoadingIndicator` flag is set in `actionManifest.json`.\r\n * \r\n * Usage:\r\n * ```typescript\r\n * let request = new actionSDK.HideLoadingIndicator.Request();\r\n * let response = await actionSDK.executeApi(request) as actionSDK.HideLoadingIndicator.Response;\r\n * let success = response.success;\r\n * ```\r\n * @category Misc API\r\n */\r\nexport namespace HideLoadingIndicator {\r\n    /**\r\n     * Request body for hide loading indicator API.\r\n     */\r\n    export class Request extends BaseApi.Request {\r\n        /**\r\n         * Constructor to create a request object.\r\n         * @hidden\r\n         */\r\n        constructor() {\r\n            super(ApiType.HideLoadingIndicator);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Response body for hide loading indicator API.\r\n     */\r\n    export class Response extends BaseApi.Response { }\r\n}","import { BaseApi } from \"../BaseApi\";\r\nimport { ApiType } from \"../ApiType\";\r\n\r\n/**\r\n * API to close current action package view.\r\n * \r\n * Usage:\r\n * ```typescript\r\n * let request = new actionSDK.CloseView.Request();\r\n * let response = await actionSDK.executeApi(request) as actionSDK.CloseView.Response;\r\n * let success = response.success;\r\n * ```\r\n * @category Misc API\r\n */\r\nexport namespace CloseView {\r\n    /**\r\n     * Request body for close action package view API.\r\n     */\r\n    export class Request extends BaseApi.Request {\r\n        /**\r\n         * Constructor to create a request object.\r\n         * @hidden\r\n         */\r\n        constructor() {\r\n            super(ApiType.CloseView);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Response body for close action package view API.\r\n     */\r\n    export class Response extends BaseApi.Response { }\r\n}","import { BaseApi } from \"./apis/BaseApi\";\r\nimport { ApiErrorCategory, getApiError } from \"./apis/ApiError\";\r\nimport { ActionSdkHostBridge } from \"./host/ActionSdkHostBridge\";\r\n\r\n/**\r\n * Constant denoting maximum number of requests in a batch.\r\n * @category API\r\n */\r\nexport const maxBatchApisCount = 10;\r\n\r\n/**\r\n * Function to execute an API.\r\n * \r\n * Usage:\r\n * ```typescript\r\n * let action: actionSDK.Action;\r\n * let request = new actionSDK.CreateAction.Request(action);\r\n * let response = await actionSDK.executeApi(request) as actionSDK.CreateAction.Response;\r\n * let actionId = response.actionId;\r\n * ```\r\n * @param request API request object\r\n * @returns Promise containing the API response object\r\n * @category API\r\n */\r\nexport async function executeApi(request: BaseApi.Request): Promise<BaseApi.Response> {\r\n    let batchRequest = new BaseApi.BatchRequest([request]);\r\n    let batchResponse = await executeBatchApi(batchRequest);\r\n    return batchResponse.responses[0];\r\n}\r\n\r\n/**\r\n * Function to execute a list of APIs in batch. \r\n * There shouldn't be more than 10 APIs in a batch!\r\n * \r\n * Usage:\r\n * ```typescript\r\n * let action: actionSDK.Action;\r\n * let createActionRequest = new actionSDK.CreateAction.Request(action);\r\n * let dataRow: actionSDK.ActionDataRow;\r\n * let addDataRowRequest = new actionSDK.ActionDataRow.Request(dataRow);\r\n * addDataRowRequest.setDependentOn([createActionRequest]);\r\n * let batchRequest = new actionSDK.BaseApi.BatchRequest([createActionRequest, addDataRowRequest]);\r\n * let batchResponse = await actionSDK.executeBatchApi(batchRequest);\r\n * let actionId = batchResponse.responses[0].actionId;\r\n * let dataRowId = batchResponse.responses[1].dataRowId;\r\n * ```\r\n * @param batchRequest Batch request object containing the list of individual API request objects\r\n * @returns Promise containing the batch response\r\n * @category API\r\n */\r\nexport async function executeBatchApi(batchRequest: BaseApi.BatchRequest): Promise<BaseApi.BatchResponse> {\r\n    if (batchRequest.requests.length > maxBatchApisCount) {\r\n        throw getApiError(ApiErrorCategory.BatchApiCountLimitExceeded, null, `Cannot execute more than ${maxBatchApisCount} APIs in a batch!`);\r\n    }\r\n    return await ActionSdkHostBridge.executeBatchApiRequest(batchRequest);\r\n}","import { BaseApi } from \"../apis/BaseApi\";\r\nimport { IActionSdkHost } from \"./IActionSdkHost\";\r\n\r\n/**\r\n * Bridge between ActionSDK and ActionHost.\r\n * @internal\r\n */\r\nexport class ActionSdkHostBridge {\r\n    /**\r\n     * Below will be used when action views are hosted directly within ActionHost.\r\n     */\r\n    public static actionSdkHost: IActionSdkHost;\r\n\r\n    /**\r\n     * Below will be used when action views are hosted within an iFrame inside ActionHost.\r\n     */\r\n    public static currentWindow: Window | any;\r\n\r\n    /**\r\n     * This will ensure the above properties are initialized properly.\r\n     */\r\n    private static ensureInitialized() {\r\n        this.currentWindow = this.currentWindow || window;\r\n        this.actionSdkHost = this.actionSdkHost || window[\"actionSdkHost\"];\r\n    }\r\n\r\n    /**\r\n     * ActionSdkHost when action views are hosted within ActionHost.\r\n     */\r\n    public static async executeBatchApiRequest(batchRequest: BaseApi.BatchRequest): Promise<BaseApi.BatchResponse> {\r\n        this.ensureInitialized();\r\n        batchRequest.validate();\r\n        let batchResponse: BaseApi.BatchResponse;\r\n        if (this.actionSdkHost) {\r\n            batchResponse = await this.actionSdkHost.executeBatchApiRequest(batchRequest)\r\n        } else {\r\n            batchResponse = await this.executeIFramedBatchApiRequest(batchRequest);\r\n        }\r\n        // Uncomment below line to debug\r\n        // console.log(`ActionSdkHostBridge.executeBatchApiRequest - batchRequest:${JSON.stringify(batchRequest)}, batchResponse:${JSON.stringify(batchResponse)}`);\r\n        return batchResponse;\r\n    }\r\n\r\n    /**\r\n     * ActionSdkHost when action views are hosted within an iFrame in ActionHost.\r\n     */\r\n    private static apiResolves: { [key: string]: any } = {};\r\n    private static async executeIFramedBatchApiRequest(batchRequest: BaseApi.BatchRequest): Promise<BaseApi.BatchResponse> {\r\n        return new Promise((resolve, reject) => {\r\n            this.apiResolves[batchRequest.id] = resolve;\r\n            this.sendMessageToActionHost(batchRequest);\r\n            this.receiveMessageFromActionHost();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Communication from ActionSDK to ActionHost.\r\n     */\r\n    private static sendMessageToActionHost(batchRequest: BaseApi.BatchRequest) {\r\n        this.currentWindow.parent.postMessage(batchRequest, \"*\");\r\n    }\r\n\r\n    /**\r\n     * Communication from ActionHost to ActionSDK.\r\n     */\r\n    private static receivingMessageFromActionHost: boolean = false;\r\n    private static receiveMessageFromActionHost() {\r\n        if (!this.receivingMessageFromActionHost && this.currentWindow) {\r\n            let self = this;\r\n            this.currentWindow.addEventListener(\"message\", (message: MessageEvent) => {\r\n                let batchResponse = message.data as BaseApi.BatchResponse;\r\n                if (batchResponse.id && self.apiResolves[batchResponse.id]) {\r\n                    let resolve = self.apiResolves[batchResponse.id];\r\n                    resolve(batchResponse);\r\n                }\r\n            });\r\n            this.receivingMessageFromActionHost = true;\r\n        }\r\n    }\r\n}","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\n  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');\n}\n\nexport default bytesToUuid;","import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nexport default v1;","import bytesToUuid from './bytesToUuid.js';\n\nfunction uuidToBytes(uuid) {\n  // Note: We assume we're being passed a valid uuid string\n  var bytes = [];\n  uuid.replace(/[a-fA-F0-9]{2}/g, function (hex) {\n    bytes.push(parseInt(hex, 16));\n  });\n  return bytes;\n}\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = new Array(str.length);\n\n  for (var i = 0; i < str.length; i++) {\n    bytes[i] = str.charCodeAt(i);\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  var generateUUID = function generateUUID(value, namespace, buf, offset) {\n    var off = buf && offset || 0;\n    if (typeof value == 'string') value = stringToBytes(value);\n    if (typeof namespace == 'string') namespace = uuidToBytes(namespace);\n    if (!Array.isArray(value)) throw TypeError('value must be an array of bytes');\n    if (!Array.isArray(namespace) || namespace.length !== 16) throw TypeError('namespace must be uuid string or an Array of 16 byte values'); // Per 4.3\n\n    var bytes = hashfunc(namespace.concat(value));\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      for (var idx = 0; idx < 16; ++idx) {\n        buf[off + idx] = bytes[idx];\n      }\n    }\n\n    return buf || bytesToUuid(bytes);\n  }; // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name;\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes == 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Array(msg.length);\n\n    for (var i = 0; i < msg.length; i++) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var i;\n  var x;\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n  var hex;\n\n  for (i = 0; i < length32; i += 8) {\n    x = input[i >> 5] >>> i % 32 & 0xff;\n    hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[(len + 64 >>> 9 << 4) + 14] = len;\n  var i;\n  var olda;\n  var oldb;\n  var oldc;\n  var oldd;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (i = 0; i < x.length; i += 16) {\n    olda = a;\n    oldb = b;\n    oldc = c;\n    oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  var i;\n  var output = [];\n  output[(input.length >> 2) - 1] = undefined;\n\n  for (i = 0; i < output.length; i += 1) {\n    output[i] = 0;\n  }\n\n  var length8 = input.length * 8;\n\n  for (i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js';\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof options == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nexport default v4;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes == 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Array(msg.length);\n\n    for (var i = 0; i < msg.length; i++) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var i = 0; i < N; i++) {\n    M[i] = new Array(16);\n\n    for (var j = 0; j < 16; j++) {\n      M[i][j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var i = 0; i < N; i++) {\n    var W = new Array(80);\n\n    for (var t = 0; t < 16; t++) {\n      W[t] = M[i][t];\n    }\n\n    for (var t = 16; t < 80; t++) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var t = 0; t < 80; t++) {\n      var s = Math.floor(t / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';"],"sourceRoot":""}